<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <link href="~/adminTemplate/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="~/adminTemplate/css/sb-admin-2.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet"/>
</head>
<br><br>
<body>
<div class="container text-center">
    <h3>Kiraladığım Arabalar</h3>
    <br>
    <table class="table table-bordered">
        <thead>
        <tr>
            <th scope="col">Araba</th>
            <th scope="col">Konum</th>
            <th scope="col">Teslim Yeri</th>
            <th scope="col">Kiralama Tarihi</th>
            <th scope="col">Kiralama Başlangıç Tarihi</th>
            <th scope="col">Kiralama Bitiş Tarihi</th>
            <th scope="col">Günlük Ücret</th>
            <th scope="col">Toplam Ücret</th>
            <th scope="col">Durum</th>
            <th scope="col" colspan="2">İşlemler</th>
        </tr>
        </thead>
        <tbody id="carList">
        </tbody>
    </table>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
<script>
    $(document).ready(function() {
        var accessToken = localStorage.getItem('accessToken');
        var tokenInfo = accessToken ? parseJwt(accessToken) : null;

        if (!accessToken || accessToken.trim() === '') {
            window.location.href = '/Account/Login';
            return;
        } else {
            $('#loginButton').hide();

            if (tokenInfo && tokenInfo["http://schemas.microsoft.com/ws/2008/06/identity/claims/role"] === "User") {
                var userId = tokenInfo["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier"];
                var userRentalsUrl = "http://localhost:5177/api/GetMyRentals/User";

                $.ajax({
                    url: userRentalsUrl,
                    type: "GET",
                    headers: {
                        "Authorization": "Bearer " + accessToken
                    },
                    success: function(data) {
                        if (data.length > 0) {
                            var rentalsHtml = '';
                            data.forEach(function(rental) {
                                    rentalsHtml += '<tr>';
                                    rentalsHtml += '<td>' + (rental.car.brand + " " + rental.car.name).charAt(0).toUpperCase() + (rental.car.brand + " " + rental.car.name).slice(1) + '</td>';
                                    rentalsHtml += '<td>' + rental.location.charAt(0).toUpperCase() + rental.location.slice(1) + '</td>';
                                    rentalsHtml += '<td>' + rental.deliveryLocation.charAt(0).toUpperCase() + rental.deliveryLocation.slice(1) + '</td>';
                                    rentalsHtml += '<td>' + formatDate(rental.createdDate) + '</td>';
                                    rentalsHtml += '<td>' + formatDate(rental.rentalStartDate) + '</td>';
                                    rentalsHtml += '<td>' + formatDate(rental.rentalEndDate) + '</td>';
                                    rentalsHtml += '<td>' + formatCurrency(rental.car.price) + '</td>';
                                    rentalsHtml += '<td>' + formatCurrency(rental.car.price * calculateRentalDays(rental.rentalStartDate, rental.rentalEndDate)) + '</td>';
                                    if (rental.status === false) {
                                        rentalsHtml += '<td style="color: red;">Kiralama Bitti</td>';
                                    } else {
                                        rentalsHtml += '<td style="color: green;">Devam Ediyor</td>';
                                        rentalsHtml += '<td>';
                                        rentalsHtml += '<input type="date" id="newRentalEndDate_' + rental.id + '" class="newRentalEndDateInput form-control" min="' + rental.rentalEndDate.split('T')[0] + '">';
                                        rentalsHtml += '<button class="extendButton btn btn-success" data-rental-id="' + rental.id + '">Uzat</button>';
                                        rentalsHtml += '</td>';
                                        rentalsHtml += '<td><button class="cancelButton btn btn-danger" data-rental-id="' + rental.id + '">İptal</button></td>';
                                    }
                            
                                    rentalsHtml += '</tr>';
                                });

                            $('#carList').html(rentalsHtml);
                        } else {
                            $('#carList').html('<tr><td colspan="6">Araç Kiralama Kaydınız Bulunmamaktadır.</td></tr>');
                        }
                    },
                    error: function(xhr, status, error) {
                        $('#carList').html('<tr><td colspan="6">Error fetching rentals.</td></tr>');
                    }
                });
            }
        }

        $('#logoutButton').click(function() {
            localStorage.removeItem('accessToken');
            location.reload();
        });

        $(document).on("click", ".cancelButton", function() {
            var rentalId = $(this).data("rental-id");
            var cancelRentalUrl = "http://localhost:5177/api/CompleteRental/User/" + rentalId;
            if (confirm("Bu kiralama işlemini iptal etmek istediğinizden emin misiniz?")) {
                $.ajax({
                    url: cancelRentalUrl,
                    type: "POST",
                    headers: {
                        "Authorization": "Bearer " + accessToken
                    },
                    success: function(response) {
                        toastr.success("Kiralama başarıyla iptal edildi.");
                        location.reload();
                    },
                    error: function(xhr, status, error) {
                        toastr.error("Kiralama iptali sırasında bir hata oluştu.");
                    }
                });
            }
        });
        $(document).on("click", ".extendButton", function() {
            var rentalId = $(this).data("rental-id");
            var extendRentalUrl = "http://localhost:5177/api/ExtendRental/User/" + rentalId;
            var newRentalEndDate = $("#newRentalEndDate_" + rentalId).val(); 
        
            $.ajax({
                url: extendRentalUrl,
                type: "PUT",
                contentType: "application/json", 
                headers: {
                    "Authorization": "Bearer " + accessToken
                },
                data: JSON.stringify({ "rentalId": rentalId, "newRentalEndDate": newRentalEndDate }), 
                success: function(response) {
                    toastr.success("Kiralama süresi başarıyla uzatıldı.");
                    location.reload();
                },
                error: function(xhr, status, error) {
                    toastr.error("Kiralama süresi uzatılırken bir hata oluştu." );
                }
            });
        });





        function formatDate(dateString) {
            var date = new Date(dateString);
            var day = date.getDate();
            var month = date.getMonth() + 1;
            var year = date.getFullYear();

            day = day < 10 ? '0' + day : day;
            month = month < 10 ? '0' + month : month;

            return day + '-' + month + '-' + year;
        }

        function calculateRentalDays(startDate, endDate) {
            var start = new Date(startDate);
            var end = new Date(endDate);

            return Math.ceil((end - start) / (1000 * 60 * 60 * 24));
        }

        function formatCurrency(amount) {
            return amount.toLocaleString() + ' ₺';
        }

        function parseJwt(token) {
            var base64Url = token.split('.')[1];
            var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
            var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {
                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
            }).join(''));

            return JSON.parse(jsonPayload);
        }
    });
</script>

</body>

</html>